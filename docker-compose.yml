services:
  mysql_db:
    image: mysql:latest
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: customer_db
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "10001:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uuser", "-p123456"]
      interval: 10s
      retries: 5
      start_period: 30s

  mongo_db:
    image: mongo:latest
    container_name: mongo_container
    restart: always
    ports:
      - "10002:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: items_db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      retries: 5
      start_period: 30s

  postgres_db:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 123456
    ports:
      - "10003:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d orders_db"]
      interval: 10s
      retries: 5
      start_period: 30s

  customer_service:
    build: ./customer-service
    container_name: customer_service_container
    restart: always
    ports:
      - "10004:8000"
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      DATABASE_URL: mysql+pymysql://user:123456@mysql_db:3306/customer_db
    volumes:
      - ./customer-service:/app

  gateway:
    build: ./gateway
    container_name: gateway_container
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - customer_service
    environment:
      SECRET_KEY: secret_key
      HASH_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRES: 1440
      REFRESH_TOKEN_EXPIRES: 10080
    volumes:
      - ./gateway:/app

volumes:
  mysql_data:
  mongo_data:
  postgres_data: